package o09.reflexion;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Field;
import java.util.List;
import java.util.StringJoiner;

public class CsvToolsGen {

	public static <T> void toCsv(String filePath, List<T> list, String separator, Class<T> clazz) throws IOException {
		try (BufferedWriter bw = new BufferedWriter(new FileWriter(filePath))) {

			// première ligne : les noms des champs séparés par le separator
			String firstLine = "";
			// dans la pratique : utiliser StringBuilder (une classe peut avoir énormément de champs)
		
			
			Field[] fields = clazz.getDeclaredFields();
			for (Field field : fields) {
				firstLine += field.getName();
				firstLine += separator;
			}
			if (firstLine.length() != 0) {
//				"Ma chaine de Chars" -> "haine de Ch"
//				"hamburger".substring(4, 8) returns "urge"
				firstLine = firstLine.substring(0,firstLine.length() - separator.length());
			}
			bw.write(firstLine);
			bw.newLine();
			for (T obj : list) {
				StringJoiner
				
				
				bw.write(line);
				bw.newLine();
			}
		}

	}

	public static <T> List<T> fromCsv(String filePath, String separator, Class<T> clazz) {

		return null;
	}

}
